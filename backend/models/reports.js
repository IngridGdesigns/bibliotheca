const pool = require('../database'); // Import your PostgreSQL connection pool


/*********************************************
        
    Reports table CRUD 

**********************************************/

// Read all reports with associated generated by user information
const getAllReports = async (req, res) => {
    try {
        const client = await pool.connect();
        const queryText = `
            SELECT r.*, u.name AS generated_by_name
            FROM reports r
            INNER JOIN library_staff u ON r.generated_by = u.staff_id
        `;
        const { rows } = await client.query(queryText);
        res.status(200).json(rows);
    } catch (error) {
        console.error('Error fetching reports:', error);
        res.status(500).send('Server error');
    }
};

// Update report
const updateReport = async (req, res) => {
    const report_id = req.params.report_id;
    const { report_name, description, generated_by } = req.body;

    try {
        const client = await pool.connect();
        const queryText = 'UPDATE reports SET report_name = $1, description = $2, generated_by = $3 WHERE report_id = $4 RETURNING *';
        const values = [report_name, description, generated_by, report_id];
        const { rows } = await client.query(queryText, values);
        res.status(200).json(rows[0]);
    } catch (error) {
        console.error('Error updating report:', error);
        res.status(500).send('Server error');
    }
};

// Create new report
const createReport = async (req, res) => {
    const { report_name, description, generated_by } = req.body;

    try {
        const client = await pool.connect();
        const queryText = 'INSERT INTO reports (report_name, description, generated_by) VALUES ($1, $2, $3) RETURNING *';
        const values = [report_name, description, generated_by];
        const { rows } = await client.query(queryText, values);
        res.status(201).json(rows[0]);
    } catch (error) {
        console.error('Error creating report:', error);
        res.status(500).send('Server error');
    }
};

// Delete report
const deleteReport = async (req, res) => {
    const report_id = req.params.report_id;

    try {
        const client = await pool.connect();
        await client.query('DELETE FROM reports WHERE report_id = $1', [report_id]);
        res.status(204).send();
    } catch (error) {
        console.error('Error deleting report:', error);
        res.status(500).send('Server error');
    }
};

module.exports = {
    getAllReports,
    createReport,
    updateReport,
    deleteReport
}
